;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Hello-Process
;;;


(module hello-process.process jazz

(import (termite))

(import (jazz.platform)
        (jazz.system)
        (jazz.system.process))


(class Hello-Process-Process extends Process
  
  
  (method override (start-process)
    (system-message "Hello World2 !")

    (let ((current-me (me)))
      (spawn
        (lambda ()
          (send current-me "Hello Termite!"))))
    (let ((the-answer (retrieve)))
      (system-message the-answer))
    (system-message "End")
    
    (sleep 5)
    
    (exit-process))))



;Works with this module definition:
;(module termite scheme
;
;(require (termite.implementation))
;
;(export (termite.syntax (phase syntax)))
;        ;(jazz.test.module.e (except e1))
;        ;(jazz.test.module.o (only o1))
;        ;(jazz.test.module.p (prefix p$))
;        ;(jazz.test.module.r (rename (r1 rr1))))
;
;(native me)
;(native send)
;(native !)
;(native retrieve)
;(native ?)
;
;(native |termite#spawn|)
;(native |termite#spawn-link|)
;
;;; private
;(native |termite#handle-exception-message|)
;(native |termite#termite-exception?|)
;(native |termite#pid?|))


